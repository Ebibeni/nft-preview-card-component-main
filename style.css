/* declaring const variables to be used later */
:root{
    --clr-primary-ETH: 178 100% 50%;
    --clr-primary-blue-Text: 215 51% 70%;
    --clr-neutral-white: 0 0% 100%;
    --clr-neutral-main-BG: 217 54% 11%;
    --clr-neutral-card-BG: 216 50% 16%;
    --clr-neutral-line: 215 32% 27%;

    --ff-primary: "Outfit";

    --fw-300: 300;
    --fw-400: 500;
    --fw-700: 600;

    /* Since the default root font size is 16px then, then following */
    /* 13px */
    --fs-300: 0.8125rem;
    /* 15px */
    --fs-500: 0.9375rem;
    /* 20px */
    --fs-2000: 1.25rem;
    
}
/* Text color */
.text-primary-ETH {
  color: hsl(var(--clr-primary-ETH));
}
.text-primary-blue {
  color: hsl(var(--clr-primary-blue-Text));
}
.text-neutral-white {
  color: hsl(var(--clr-neutral-white));
}

/* Text sizing */
.fs-300 {
  font-size: var(--fs-300);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-2000 {
  font-size: var(--fs-2000);
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
    html:focus-within {
      scroll-behavior: auto;
    }
  
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }
  @media (width < 375px){

    .grid-card{
      min-width: 15rem;
    }
  }

  body {
    
    min-height: 100vh;
  
    font-family: var(--ff-primary);
    font-weight: var(--fw-400);
  
    background-color: hsl(var(--clr-neutral-main-BG));
  }
  .container{
    display: flex;
    align-items: center;
    justify-content: center;
    height: 49rem;
  }
  
  .grid-card{
    display: grid;
    gap: 1rem;
    background-color: hsl(var(--clr-neutral-card-BG));
    padding: 1rem;
    border-radius: 1rem;
    max-width: 18rem;
  }
  .flex{
    display: flex;
    justify-content: space-between;
  }
  .flex-image-avatar{
    display: flex;
    align-items: center;
  }
  .image-equilibrium {
    opacity: 1;
    transition: .5s ease;
    backface-visibility: hidden;
    border-radius: 0.5rem;
  }

  .image-equilibrium-div{
    border-radius: 0.5rem;
    position: relative;
  }
  .middle {
    border-radius: 0.5rem;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    transition: .5s ease;
    background: hsl(var(--clr-primary-ETH));
  }

  .middle-img {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  }
  .image-equilibrium-div:hover .image-equilibrium-div  {
    opacity: 1;
  }
  .image-equilibrium-div:hover .middle {
    opacity: 0.7;
    cursor: pointer;
  }
  .icon-ethereum::before{
    content: url('./images/icon-ethereum.svg');
    vertical-align: middle;
    margin-left: 0.1rem;
  }
  .icon-clock::before{
    content: url('./images/icon-clock.svg');
    vertical-align: middle;
    margin-right: 0.1rem;
  }
  .image-avatar{
    height: 2rem;
    border: solid hsl(var(--clr-neutral-white));
    border-radius: 1rem;
    margin-right: 0.8rem;
  }

  .line-1 {
    height: 1px;
    background: hsl(var(--clr-neutral-line));
  }


    /* Hover classes */
  .text-neutral-white:hover{
    color: hsl(var(--clr-primary-ETH));
    cursor: pointer;
  }
  .Equilibrium:hover{
    color: hsl(var(--clr-primary-ETH));
    cursor: pointer;
  }
  
